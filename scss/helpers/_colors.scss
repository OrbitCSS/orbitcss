@function color($key) {
  @if map-has-key($color-palette, $key) {
    @return map-get($color-palette, $key);
  }
  @warn "Unknown `#{$key}` in $colors.";
  @return null;
}

@function getTextColor($color) {
  @if(lightness($color) > 60) {
    @return color(black);
  }
  @else {
    @return color(white);
  }
}

$primary: #6e45e2 !default;
$warning: #ffdd57 !default;
$info: #bfd9fe !default;
$danger: #ff2b56 !default;
$success: #00e3ae !default;
$black: #393939 !default;
$dark: #304352 !default;
$night: #4e4376 !default;
$white: #ffffff !default;
$light: #eef1f5 !default;
$light-grey: #d7d2cc !default;
$dark-grey: #616161 !default;
$link: #495aff !default;
$muted: lighten($dark-grey, 35%) !default;
$disabled: #f7f7f7 !default;

$color-palette: (
  primary: $primary,
  warning: $warning,
  info: $info,
  danger: $danger,
  success: $success,
  black: $black,
  dark: $dark,
  night: $night,
  white: $white,
  light: $light,
  light-grey: $light-grey,
  dark-grey: $dark-grey,
  link: $link,
  disabled: $disabled
)  !default;

.has-text {
  @each $color in $color-palette {
    &-#{nth($color, 1)} {
      color: nth($color, 2) !important;
    }
  }

  &-muted {
    color: $muted;
  }
}

.has-bg {
  @each $color in $color-palette {
    &-#{nth($color, 1)} {
      background-color: nth($color, 2) !important;
    }
  }
}
